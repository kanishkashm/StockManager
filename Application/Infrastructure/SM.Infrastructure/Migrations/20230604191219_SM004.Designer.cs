// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SM.Infrastructure.Data;

#nullable disable

namespace SM.Infrastructure.Migrations
{
    [DbContext(typeof(SalesManagerDbContext))]
    [Migration("20230604191219_SM004")]
    partial class SM004
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SM.Core.Domain.Client", b =>
                {
                    b.Property<int>("Dclink")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DCLink");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dclink"), 1L, 1);

                    b.Property<string>("Account")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("AccountStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountStatusID")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("AccountTerms")
                        .HasColumnType("int");

                    b.Property<string>("Acn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ACN")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("AcountName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("AcountNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Addressee")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<double?>("AutoDisc")
                        .HasColumnType("float");

                    b.Property<bool>("BCodaccount")
                        .HasColumnType("bit")
                        .HasColumnName("bCODAccount");

                    b.Property<bool>("BForCurAcc")
                        .HasColumnType("bit")
                        .HasColumnName("bForCurAcc");

                    b.Property<bool>("BSendOrderConfirmations")
                        .HasColumnType("bit")
                        .HasColumnName("bSendOrderConfirmations");

                    b.Property<bool>("BSourceDocEmail")
                        .HasColumnType("bit")
                        .HasColumnName("bSourceDocEmail");

                    b.Property<bool?>("BSourceDocPrint")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bSourceDocPrint")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("BStatEmail")
                        .HasColumnType("bit")
                        .HasColumnName("bStatEmail");

                    b.Property<bool>("BStatPrint")
                        .HasColumnType("bit")
                        .HasColumnName("bStatPrint");

                    b.Property<bool?>("BTaxPrompt")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bTaxPrompt")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("BankAccNum")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("BankAccType")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("BankLink")
                        .HasColumnType("int");

                    b.Property<int?>("BfopenType")
                        .HasColumnType("int")
                        .HasColumnName("BFOpenType");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Bsb")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("BSB");

                    b.Property<DateTime?>("BusinessEstablished")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CAccDescription")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("cAccDescription");

                    b.Property<string>("CBankRefNr")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cBankRefNr");

                    b.Property<string>("CStatEmailPass")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cStatEmailPass");

                    b.Property<string>("CWebPage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cWebPage");

                    b.Property<string>("CardIdentification")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<bool>("CashDebtor")
                        .HasColumnType("bit");

                    b.Property<string>("CcCardNumber")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("CC_CardNumber");

                    b.Property<DateTime?>("CcExpiryDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("CC_ExpiryDate");

                    b.Property<string>("CcNameOnCard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CC_NameOnCard");

                    b.Property<bool>("CheckTerms")
                        .HasColumnType("bit");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Contact_Person");

                    b.Property<DateTime?>("CreditApplicationDate")
                        .HasColumnType("smalldatetime");

                    b.Property<double?>("CreditLimit")
                        .HasColumnType("float")
                        .HasColumnName("Credit_Limit");

                    b.Property<double>("CreditPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreditSearch")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("Ct")
                        .HasColumnType("bit")
                        .HasColumnName("CT");

                    b.Property<DateTime?>("DTimeStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("dTimeStamp");

                    b.Property<double?>("Dcbalance")
                        .HasColumnType("float")
                        .HasColumnName("DCBalance");

                    b.Property<string>("DeliveredTo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Delivered_To");

                    b.Property<int?>("DiscMtrxRow")
                        .HasColumnType("int");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("EMail");

                    b.Property<string>("EmailOrderConfirmationTo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("EmailStatementsTo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("EmailTaxInvoicesTo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("('')");

                    b.Property<int>("EntityStructureId")
                        .HasColumnType("int")
                        .HasColumnName("EntityStructureID");

                    b.Property<double?>("FForeignBalance")
                        .HasColumnType("float")
                        .HasColumnName("fForeignBalance");

                    b.Property<string>("Fax1")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Fax2")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("Flid")
                        .HasColumnType("int")
                        .HasColumnName("FLID");

                    b.Property<decimal>("FuelLevyPercen")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Goni")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("GONI");

                    b.Property<int?>("IAgentId")
                        .HasColumnType("int")
                        .HasColumnName("iAgentID");

                    b.Property<int?>("IAreasId")
                        .HasColumnType("int")
                        .HasColumnName("iAreasID");

                    b.Property<int?>("IArpriceListNameId")
                        .HasColumnType("int")
                        .HasColumnName("iARPriceListNameID");

                    b.Property<int?>("IBusClassId")
                        .HasColumnType("int")
                        .HasColumnName("iBusClassID");

                    b.Property<int?>("IBusTypeId")
                        .HasColumnType("int")
                        .HasColumnName("iBusTypeID");

                    b.Property<int?>("IClassId")
                        .HasColumnType("int")
                        .HasColumnName("iClassID");

                    b.Property<int?>("ICountryId")
                        .HasColumnType("int")
                        .HasColumnName("iCountryID");

                    b.Property<int?>("ICurrencyId")
                        .HasColumnType("int")
                        .HasColumnName("iCurrencyID");

                    b.Property<int>("IDefTaxTypeId")
                        .HasColumnType("int")
                        .HasColumnName("iDefTaxTypeID");

                    b.Property<int>("IEucountryId")
                        .HasColumnType("int")
                        .HasColumnName("iEUCountryID");

                    b.Property<int?>("IIncidentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("iIncidentTypeID");

                    b.Property<int>("ISettlementTermsId")
                        .HasColumnType("int")
                        .HasColumnName("iSettlementTermsID");

                    b.Property<double>("IgufabRate")
                        .HasColumnType("float")
                        .HasColumnName("IGUFabRate");

                    b.Property<string>("Init")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<int>("InsuredId")
                        .HasColumnType("int")
                        .HasColumnName("InsuredID");

                    b.Property<double?>("InterestRate")
                        .HasColumnType("float")
                        .HasColumnName("Interest_Rate");

                    b.Property<bool>("IsGlobalAcc")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProspect")
                        .HasColumnType("bit");

                    b.Property<string>("LegalName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("MainAccLink")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("OnHold")
                        .HasColumnType("bit")
                        .HasColumnName("On_Hold");

                    b.Property<string>("PersonalGurantee")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Physical1")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Physical2")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Physical3")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Physical4")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Physical5")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("PhysicalPc")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PhysicalPC");

                    b.Property<string>("Post1")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Post2")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Post3")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Post4")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Post5")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("PostPc")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("PostPC");

                    b.Property<DateTime?>("PpsExpiryDate")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("PPS_ExpiryDate");

                    b.Property<decimal>("PriceHalf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RebateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RebateID")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Registration")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RegistrationNo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("RepId")
                        .HasColumnType("int")
                        .HasColumnName("RepID");

                    b.Property<string>("TOrderNotes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("tOrderNotes")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Tax_Number");

                    b.Property<string>("Telephone")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Telephone2")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Title")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Token")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("('')");

                    b.Property<double>("TotInvoiced")
                        .HasColumnType("float");

                    b.Property<double>("TotPending")
                        .HasColumnType("float");

                    b.Property<double>("TotReceived")
                        .HasColumnType("float");

                    b.Property<double>("TotalDebitBalance")
                        .HasColumnType("float");

                    b.Property<string>("TrustName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UdArdate")
                        .HasColumnType("datetime")
                        .HasColumnName("udARDate");

                    b.Property<int?>("UiArcatid")
                        .HasColumnType("int")
                        .HasColumnName("uiARCATID");

                    b.Property<int?>("UiArdeliveryMethod")
                        .HasColumnType("int")
                        .HasColumnName("uiARDeliveryMethod");

                    b.Property<bool>("UseEmail")
                        .HasColumnType("bit");

                    b.Property<string>("XeroGuid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("XeroGUID")
                        .HasDefaultValueSql("('')");

                    b.HasKey("Dclink")
                        .HasName("PK_CLIENT");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("SM.Core.Domain.OrderHeader", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalExcl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalIncl")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTax")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("OrderHeaders");
                });

            modelBuilder.Entity("SM.Core.Domain.OrderItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"), 1L, 1);

                    b.Property<decimal>("ExclAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InclAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderHeaderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StockItemLinkId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemId");

                    b.HasIndex("OrderHeaderId");

                    b.HasIndex("StockItemLinkId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("SM.Core.Domain.StkItem", b =>
                {
                    b.Property<int>("StockLink")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockLink"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("AddDetails")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("AveUcst")
                        .HasColumnType("float")
                        .HasColumnName("AveUCst");

                    b.Property<bool?>("BCommissionItem")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bCommissionItem")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("BLotItem")
                        .HasColumnType("bit")
                        .HasColumnName("bLotItem");

                    b.Property<bool?>("BLotMustExpire")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bLotMustExpire")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("BarCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Bar_Code");

                    b.Property<string>("BomCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<bool>("Bomitem")
                        .HasColumnType("bit")
                        .HasColumnName("BOMItem");

                    b.Property<double?>("BulkQty")
                        .HasColumnType("float");

                    b.Property<double?>("BulkRate")
                        .HasColumnType("float");

                    b.Property<string>("CComponent")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cComponent");

                    b.Property<string>("CExtDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cExtDescription");

                    b.Property<string>("CModel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cModel");

                    b.Property<string>("CRevision")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cRevision");

                    b.Property<string>("CSimpleCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cSimpleCode");

                    b.Property<bool>("CalcPriceAsPercentage")
                        .HasColumnType("bit");

                    b.Property<double>("CalcPricePercentage")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CostCentre")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DDateReleased")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("dDateReleased");

                    b.Property<DateTime?>("DStkitemTimeStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("dStkitemTimeStamp");

                    b.Property<bool>("DefaultGlassService")
                        .HasColumnType("bit");

                    b.Property<string>("Description1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Description_1");

                    b.Property<string>("Description2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Description_2");

                    b.Property<string>("Description3")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Description_3");

                    b.Property<bool>("DuplicateSn")
                        .HasColumnType("bit")
                        .HasColumnName("DuplicateSN");

                    b.Property<double>("FItemLastGrvcost")
                        .HasColumnType("float")
                        .HasColumnName("fItemLastGRVCost");

                    b.Property<double>("FNetMass")
                        .HasColumnType("float")
                        .HasColumnName("fNetMass");

                    b.Property<double?>("HigUcst")
                        .HasColumnType("float")
                        .HasColumnName("HigUCst");

                    b.Property<int?>("IBinLocationId")
                        .HasColumnType("int")
                        .HasColumnName("iBinLocationID");

                    b.Property<int>("IEucommodityId")
                        .HasColumnType("int")
                        .HasColumnName("iEUCommodityID");

                    b.Property<int>("IEusupplementaryUnitId")
                        .HasColumnType("int")
                        .HasColumnName("iEUSupplementaryUnitID");

                    b.Property<int?>("IInvSegValue1Id")
                        .HasColumnType("int")
                        .HasColumnName("iInvSegValue1ID");

                    b.Property<int?>("IInvSegValue2Id")
                        .HasColumnType("int")
                        .HasColumnName("iInvSegValue2ID");

                    b.Property<int?>("IInvSegValue3Id")
                        .HasColumnType("int")
                        .HasColumnName("iInvSegValue3ID");

                    b.Property<int?>("IInvSegValue4Id")
                        .HasColumnType("int")
                        .HasColumnName("iInvSegValue4ID");

                    b.Property<int?>("IInvSegValue5Id")
                        .HasColumnType("int")
                        .HasColumnName("iInvSegValue5ID");

                    b.Property<int?>("IInvSegValue6Id")
                        .HasColumnType("int")
                        .HasColumnName("iInvSegValue6ID");

                    b.Property<int?>("IInvSegValue7Id")
                        .HasColumnType("int")
                        .HasColumnName("iInvSegValue7ID");

                    b.Property<int>("IItemCostingMethod")
                        .HasColumnType("int")
                        .HasColumnName("iItemCostingMethod");

                    b.Property<int?>("ILotStatus")
                        .HasColumnType("int")
                        .HasColumnName("iLotStatus");

                    b.Property<int?>("IUomdefPurchaseUnitId")
                        .HasColumnType("int")
                        .HasColumnName("iUOMDefPurchaseUnitID");

                    b.Property<int?>("IUomdefSellUnitId")
                        .HasColumnType("int")
                        .HasColumnName("iUOMDefSellUnitID");

                    b.Property<int?>("IUomstockingUnitId")
                        .HasColumnType("int")
                        .HasColumnName("iUOMStockingUnitID");

                    b.Property<bool>("IsExternalItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLaminateItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNonStockItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("ItemActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ItemGroup")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("JobQty")
                        .HasColumnType("float");

                    b.Property<double?>("LatUcst")
                        .HasColumnType("float")
                        .HasColumnName("LatUCst");

                    b.Property<double?>("Length")
                        .HasColumnType("float");

                    b.Property<double?>("LgrvCount")
                        .HasColumnType("float")
                        .HasColumnName("LGrvCount");

                    b.Property<double?>("LowUcst")
                        .HasColumnType("float")
                        .HasColumnName("LowUCst");

                    b.Property<double?>("MaxLvl")
                        .HasColumnType("float")
                        .HasColumnName("Max_Lvl");

                    b.Property<double?>("Mfpqty")
                        .HasColumnType("float")
                        .HasColumnName("MFPQty");

                    b.Property<double?>("MinLvl")
                        .HasColumnType("float")
                        .HasColumnName("Min_Lvl");

                    b.Property<string>("Pack")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<int?>("PmtrxCol")
                        .HasColumnType("int")
                        .HasColumnName("PMtrxCol");

                    b.Property<double>("PominimumArea")
                        .HasColumnType("float")
                        .HasColumnName("POMinimumArea");

                    b.Property<bool?>("PriceListItem")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("PurchaseAccount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("QtyOnHand")
                        .HasColumnType("float")
                        .HasColumnName("Qty_On_Hand");

                    b.Property<double?>("QtyOnPo")
                        .HasColumnType("float")
                        .HasColumnName("QtyOnPO");

                    b.Property<double?>("QtyOnSo")
                        .HasColumnType("float")
                        .HasColumnName("QtyOnSO");

                    b.Property<double?>("ReOrdLvl")
                        .HasColumnType("float")
                        .HasColumnName("Re_Ord_Lvl");

                    b.Property<double?>("ReOrdQty")
                        .HasColumnType("float")
                        .HasColumnName("Re_Ord_Qty");

                    b.Property<double?>("ReservedQty")
                        .HasColumnType("float");

                    b.Property<string>("SalesAccount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("SerialItem")
                        .HasColumnType("bit");

                    b.Property<bool>("ServiceItem")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowPodes")
                        .HasColumnType("bit")
                        .HasColumnName("ShowPODes");

                    b.Property<int?>("SmtrxCol")
                        .HasColumnType("int")
                        .HasColumnName("SMtrxCol");

                    b.Property<double?>("StdUcst")
                        .HasColumnType("float")
                        .HasColumnName("StdUCst");

                    b.Property<bool>("StrictSn")
                        .HasColumnType("bit")
                        .HasColumnName("StrictSN");

                    b.Property<string>("Ttc")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("TTC");

                    b.Property<string>("Ttg")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("TTG");

                    b.Property<string>("Tti")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("TTI");

                    b.Property<string>("Ttr")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("TTR");

                    b.Property<bool?>("UbIiallowNegative")
                        .HasColumnType("bit")
                        .HasColumnName("ubIIAllowNegative");

                    b.Property<bool?>("UbIiedgeallowance")
                        .HasColumnType("bit")
                        .HasColumnName("ubIIEDGEALLOWANCE");

                    b.Property<bool?>("UbIiglassservice")
                        .HasColumnType("bit")
                        .HasColumnName("ubIIGLASSSERVICE");

                    b.Property<bool?>("UbIiprintLabels")
                        .HasColumnType("bit")
                        .HasColumnName("ubIIPrintLabels");

                    b.Property<bool?>("UbIitemplate")
                        .HasColumnType("bit")
                        .HasColumnName("ubIITemplate");

                    b.Property<double?>("UfIigrvQty")
                        .HasColumnType("float")
                        .HasColumnName("ufIIGrvQty");

                    b.Property<double?>("UfIilotQty")
                        .HasColumnType("float")
                        .HasColumnName("ufIILotQty");

                    b.Property<double?>("UfIiminchrg")
                        .HasColumnType("float")
                        .HasColumnName("ufIIMINCHRG");

                    b.Property<double?>("UfIiminsqm")
                        .HasColumnType("float")
                        .HasColumnName("ufIIMINSQM");

                    b.Property<double?>("UfIiqtyInVolume")
                        .HasColumnType("float")
                        .HasColumnName("ufIIQtyInVolume");

                    b.Property<double?>("UfIisoqtyVolume")
                        .HasColumnType("float")
                        .HasColumnName("ufIISOQtyVolume");

                    b.Property<double?>("UfIithickness")
                        .HasColumnType("float")
                        .HasColumnName("ufIIThickness");

                    b.Property<double?>("UfIiweight")
                        .HasColumnType("float")
                        .HasColumnName("ufIIWEIGHT");

                    b.Property<int?>("UiIiheight")
                        .HasColumnType("int")
                        .HasColumnName("uiIIHeight");

                    b.Property<int?>("UiIiitemType")
                        .HasColumnType("int")
                        .HasColumnName("uiIIItemType");

                    b.Property<int?>("UiIimainItemLink")
                        .HasColumnType("int")
                        .HasColumnName("uiIIMainItemLink");

                    b.Property<int?>("UiIipricetypeid")
                        .HasColumnType("int")
                        .HasColumnName("uiIIPRICETYPEID");

                    b.Property<int?>("UiIisrvpriceid")
                        .HasColumnType("int")
                        .HasColumnName("uiIISRVPRICEID");

                    b.Property<int?>("UiIisupplier")
                        .HasColumnType("int")
                        .HasColumnName("uiIISupplier");

                    b.Property<int?>("UiIitemplPriceId")
                        .HasColumnType("int")
                        .HasColumnName("uiIITemplPriceID");

                    b.Property<double?>("UiIiwarehouse")
                        .HasColumnType("float")
                        .HasColumnName("uiIIWarehouse");

                    b.Property<int?>("UiIiwidth")
                        .HasColumnType("int")
                        .HasColumnName("uiIIWidth");

                    b.Property<bool>("WhseItem")
                        .HasColumnType("bit");

                    b.HasKey("StockLink")
                        .HasName("PK_STKITEM");

                    b.ToTable("StkItem", (string)null);
                });

            modelBuilder.Entity("SM.Core.Domain.OrderHeader", b =>
                {
                    b.HasOne("SM.Core.Domain.Client", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SM.Core.Domain.OrderItem", b =>
                {
                    b.HasOne("SM.Core.Domain.OrderHeader", "OrderHeader")
                        .WithMany()
                        .HasForeignKey("OrderHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SM.Core.Domain.StkItem", "StockItemLink")
                        .WithMany()
                        .HasForeignKey("StockItemLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderHeader");

                    b.Navigation("StockItemLink");
                });
#pragma warning restore 612, 618
        }
    }
}
